//
//  UpcomingMovieDetailPresenterTests.swift
//  TheMovieDB
//
//  Created by Tiago Chaves on 07/10/2018.
//  Copyright (c) 2018 TiagoChaves. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import TheMovieDB
import XCTest

class UpcomingMovieDetailPresenterTests: XCTestCase
{
    // MARK: Subject under test
    
    var sut: UpcomingMovieDetailPresenter!
    
    // MARK: Test lifecycle
    
    override func setUp()
    {
        super.setUp()
        setupUpcomingMovieDetailPresenter()
    }
    
    override func tearDown()
    {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupUpcomingMovieDetailPresenter()
    {
        sut = UpcomingMovieDetailPresenter()
    }
    
    // MARK: Test doubles
    
    class UpcomingMovieDetailDisplayLogicSpy: UpcomingMovieDetailDisplayLogic{
        
        var displayMovieDetailCalled = false
        var displayMovieDetailViewModel:UpcomingMovieDetail.MovieDetail.ViewModel!
        
        func displayMovieDetail(viewModel: UpcomingMovieDetail.MovieDetail.ViewModel) {
            displayMovieDetailCalled = true
            displayMovieDetailViewModel = viewModel
        }
    }
    
    // MARK: Tests
    
    func testPresentMovieDetailShouldAskViewControllerToDisplayMovieDetail()
    {
        // Given
        let spy = UpcomingMovieDetailDisplayLogicSpy()
        sut.viewController = spy
        let response = UpcomingMovieDetail.MovieDetail.Response(overviewFont: UIFont(name: "Helvetica", size: 15.0)!, overviewWidth: 10.0, upcomingMoviesDetail: Seeds.DisplayUpcomingMovieList.movie1)
        
        // When
        sut.presentMovieDetail(response: response)
        
        // Then
        XCTAssertTrue(spy.displayMovieDetailCalled, "presentMovieDetail(response:) should ask the view controller to display the movie detail")
        XCTAssertEqual(spy.displayMovieDetailViewModel.upcomingMoviesDetail, Seeds.DisplayUpcomingMovieList.movie1)
    }
}
