//
//  UpcomingMoviesListInteractor.swift
//  TheMovieDB
//
//  Created by Tiago Chaves on 03/10/18.
//  Copyright (c) 2018 TiagoChaves. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol UpcomingMoviesListBusinessLogic
{
    func getUpcomingMovies(request: UpcomingMoviesList.MoviesList.Request)
    func getFilteredUpcomingMoview(request:UpcomingMoviesList.FilteredMovies.Request)
}

protocol UpcomingMoviesListDataStore
{
    //var name: String { get set }
}

class UpcomingMoviesListInteractor: UpcomingMoviesListBusinessLogic, UpcomingMoviesListDataStore
{
    var presenter: UpcomingMoviesListPresentationLogic?
    var worker: UpcomingMoviesListWorker?
    //var name: String = ""
    
    // MARK: - UpcomingMoviesListBusinessLogic
    
    func getUpcomingMovies(request: UpcomingMoviesList.MoviesList.Request)
    {
        let networkWorker = UpcomingMoviesNetworkWorker()
        worker = UpcomingMoviesListWorker(networkWorker)
        worker?.getUpcomingMovies(ofPage: request.page, completionHandler: { (upcomingMovieResult,error) in
            
            let response:UpcomingMoviesList.MoviesList.Response
            
            if error == nil, let result = upcomingMovieResult {
                response = UpcomingMoviesList.MoviesList.Response(upcomingMoviesResult:result, error:nil)
            }else{
                response = UpcomingMoviesList.MoviesList.Response(upcomingMoviesResult:nil, error:error)
            }
            
            self.presenter?.presentUpcomingMovies(response:response)
        })
    }
    
    func getFilteredUpcomingMoview(request: UpcomingMoviesList.FilteredMovies.Request) {
//        let response = UpcomingMoviesList.FilteredMovies.Response(text:request.text)
//        presenter?.presentSomething(response:response)
    }
}
